version: '3.9'

services:
  serviceregistry:
    build: service-registry/
    image: indireed/service-registry
    container_name: service-registry
    ports:
      - "8761:8761"
    healthcheck:
      test: "exit 0"

  cloudgateway:
    build: cloud-gateway/
    image: indireed/cloud-gateway
    container_name: cloud-gateway
    ports:
      - "9000:9000"
    depends_on:
      serviceregistry:
        condition: service_healthy
    restart: on-failure

  userservice:
    build: user-service/
    image: indireed/user-service
    container_name: user-service
    ports:
      - "9001:9001"
    depends_on:
      serviceregistry:
        condition: service_healthy
      userservicedb:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    restart: on-failure  

  userservicedb:
    image: postgres
    container_name: userservicedb
    environment:
      - POSTGRES_USER=group18
      - POSTGRES_PASSWORD=group18
      - POSTGRES_DB=users
    ports:
      - "5433:5432"
    volumes:
      - userservicedbdata:/var/lib/postgresql/data
    healthcheck:
       test: "exit 0"

  jobservice:
    build: job-service/
    image: indireed/job-service
    container_name: job-service
    ports:
      - "9002:9002"
    depends_on:
      serviceregistry:
        condition: service_healthy
      jobservicedb:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    restart: on-failure

  jobservicedb:
    image: postgres
    container_name: jobservicedb
    environment:
      - POSTGRES_USER=group18
      - POSTGRES_PASSWORD=group18
      - POSTGRES_DB=jobs
    volumes:
      - jobservicedbdata:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: "exit 0"

  applicationservice:
    build: application-service/
    image: indireed/application-service
    container_name: application-service
    ports:
      - "9003:9003"
    depends_on:
      serviceregistry:
        condition: service_healthy
      applicationservicedb:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    restart: on-failure

  applicationservicedb:
    image: postgres
    container_name: applicationservicedb
    environment:
      - POSTGRES_USER=group18
      - POSTGRES_PASSWORD=group18
      - POSTGRES_DB=applications
    volumes:
      - applicationservicedbdata:/var/lib/postgresql/data
    healthcheck:
      test: "exit 0"

  keycloak:
    platform: linux/amd64
    image: quay.io/keycloak/keycloak:18.0.0
    container_name: keycloak
    command:
      - start-dev
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloakdb/keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=password
    ports:
      - "9004:8080"
    depends_on:
      keycloakdb:
        condition: service_healthy
    restart: always
    healthcheck:
      test: "exit 0"

  keycloakdb:
    image: postgres
    container_name: keycloakdb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=keycloak
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - KEYCLOAK_FRONTEND_URL=http://localhost:9004
    volumes:
      - keycloakdbdata:/var/lib/postgresql/data
    healthcheck:
      test: "exit 0"

  rabbitmq:
    image: rabbitmq:management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: "exit 0"

volumes:
  userservicedbdata:
  jobservicedbdata:
  applicationservicedbdata:
  keycloakdbdata: